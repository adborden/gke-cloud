---
name: deploy helm
on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      app_namespace:
        required: true
        type: string
      helm_repository_name:
        required: true
        type: string
      helm_repository_url:
        required: true
        type: string
      helm_additional_args:
        required: false
        type: string
    secrets:
      GCLOUD_SERVICE_ACCOUNT_KEY:
        required: true
      HELM_SECRET_VALUES:
        required: false

jobs:
  deploy:
    name: nextcloud
    runs-on: ubuntu-latest
    outputs:
      diff: ${{ steps.diff.outputs.diff }}
    env:
      app_name: ${{ inputs.app_name }}
      app_namespace: ${{ inputs.app_namespace }}
      helm_repository_name: ${{ inputs.helm_repository_name }}
      helm_repository_url: ${{ inputs.helm_repository_url }}
      helm_additional_args: ${{ inputs.helm_additional_args }}
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-kubectl@v3
        with:
          version: latest
      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}'
      - uses: 'google-github-actions/setup-gcloud@v0'
      - name: kube credentials
        run: gcloud container clusters get-credentials app-cloud-1 --region=us-west1
      - uses: azure/setup-helm@v3
        with:
           version: latest
      - name: helm repo add
        run: |
          helm repo add $helm_repository_name $helm_repository_url
      - id: diff
        name: helm diff
        run: |
          set +e
          template_yaml=$(mktemp)
        helm template $app_directory $app_directory/$helm_repository_name --namespace $app_namespace --values $app_directory/values.yaml --values <( cat <<<${HELM_SECRET_VALUES:-} ) $helm_additional_args > $template_yaml
          if [[ $? -ne 0 ]]; then
            # helm failed, don't continue
            exit 1
          fi

          kubectl diff --namespace $app_namespace --filename $template_yaml > ${app_directory}.diff
          if [[ $? -gt 1 ]]; then
            # an error occured, fail the job
            exit 1
          elif [[ $? == 1 && -s "${app_directory}.diff" ]]; then
            # there's a diff, set an output for other jobs
            echo "::set-output name=diff::${app_directory}.diff"
          fi
      - if: ${{ steps.diff.outputs.diff }}
        name: helm upgrade
        run: helm upgrade $app_directory $app_directory/$helm_repository_name --debug --wait --install --namespace $app_namespace --values $app_directory/values.yaml $helm_additional_args
